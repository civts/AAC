# SERVER ENDPOINT
server:
  host: localhost:8080
  contextPath: /aac

# APPLICATION EXTERNAL URL
application:
  url: http://localhost:8080/aac

# DB CONFIGURATION
jdbc:
  dialect: org.hibernate.dialect.MySQLDialect
  driver: com.mysql.jdbc.Driver
  url: jdbc:mysql://localhost:3306/aac
  user: ac
  password: ac

# OAUTH2 INTEGRATIONS 
oauth-providers:
  providers:
    - provider: facebook
      client:
        clientId: YOUR_FACEBOOK_CLIENT_ID
        clientSecret: YOUR_FACEBOOK_CLIENT_SECRET
        accessTokenUri: https://graph.facebook.com/oauth/access_token
        userAuthorizationUri: https://www.facebook.com/dialog/oauth
        preEstablishedRedirectUri: ${application.url}/auth/facebook-oauth/callback
        useCurrentUri: false
        tokenName: oauth_token
        authenticationScheme: query
        clientAuthenticationScheme: form
        scope:
            - openid
            - email
            - profile    
    - provider: google
      client:
        clientId: YOUR_GOOGLE_CLIENT_ID
        clientSecret: YOUR_GOOGLE_CLIENT_SECRET
        accessTokenUri: https://www.googleapis.com/oauth2/v3/token
        userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
        preEstablishedRedirectUri: ${application.url}/auth/google-oauth/callback
        useCurrentUri: false
        clientAuthenticationScheme: form
        scope:
            - openid
            - email
            - profile
      resource:        
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
        preferTokenInfo: true        

# AAC ADMIN USER PASSWORD
admin:
  password: admin
  contexts: authorization, components, organizations
  contextSpaces: components/apimanager/carbon.super  
  roles: components/apimanager/carbon.super:accountmanager, components/apimanager/carbon.super:profilemanager,components/apimanager/carbon.super:rolemanager

# EMAIL SERVER FOR NOTIFICATIONS
mail:
  username: EMAIL_SENDER
  password: EMAIL_PASSWORD
  host: SMTP_HOST
  port: SMTP_PORT
  protocol: SMTP_PROTOCOL

# SECURITY PROPERTIES
security:
  keystore: ${JWK_KEYSTORE:classpath:/keystore.jwks} 
  rememberme: 
    key: REMEMBER_ME_SECRET_KEY
  identity: # IDENTITY MAPPING SOURCE FILE
    source: file:///path/to/identities.txt

# API-MANAGEMENT PROPERTIES
api:
  contextSpace: components/apimanager
    
# DEFAULT ADMIN CLIENT  
adminClient:
    id: ${APIM_ID:API_MGT_CLIENT_ID}
    secret: ${APIM_SECRET:YOUR_MNGMT_CLIENT_SECRET}
    scopes: ${APIM_SCOPES:clientmanagement,orgmanagement,apimanagement,openid,email,profile,user.roles.me,user.roles.read,profile.basicprofile.me,profile.accountprofile.me,profile.basicprofile.all,profile.accountprofile.all}
    redirects: ${APIM_REDIRECTS:http://localhost:9443/store/jagg/jaggery_oidc_acs.jag,http://localhost:9443/publisher/jagg/jaggery_oidc_acs.jag}
    
# OPEN ID
oauth2:
   jwt: true
   kid:
      sig: ${OAUTH_KID_SIG:rsa1}
      enc: ${OAUTH_KID_ENC:}
   key: ${OAUTH_JWT_KEY:}

       
openid:
   issuer: ${OPENID_ISSUER:http://localhost:8080/aac}
   kid:
      sig: ${OPENID_KID_SIG:rsa1}
      enc: ${OPENID_KID_ENC:}
