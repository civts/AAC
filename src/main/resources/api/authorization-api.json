{
	"swagger": "2.0",
	"x-wso2-security": {
		"apim": {
			"x-wso2-scopes": [{
				"description": "",
				"name": "Authorization management",
				"roles": "",
				"key": "authorization.manage"
			},
			{
				"description": "",
				"name": "Authorization schema management",
				"roles": "",
				"key": "authorization.schema.manage"
			}
			]
		}
	},	
	"info": {
		"description": "Api Documentation",
		"version": "1.0",
		"title": "Api Documentation",
		"termsOfService": "urn:tos",
		"contact": {
			
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"host": "${server.host}",
	"basePath": "${server.contextPath}",
	"tags": [{
		"name": "authorization-controller",
		"description": "Authorization Controller"
	}],
	"paths": {
		"/authorization/{domain}": {
			"post": {
				"x-auth-type":"Application",
				"x-scope":"authorization.manage",			
				"tags": ["authorization-controller"],
				"summary": "insertAuthorization",
				"operationId": "insertAuthorizationUsingPOST",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"in": "body",
					"name": "authorizationDTO",
					"description": "authorizationDTO",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AuthorizationDTO"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AuthorizationDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/authorization/{domain}/schema": {
			"post": {
				"x-auth-type":"Application",
				"x-scope":"authorization.schema.manage",			
				"tags": ["authorization-controller"],
				"summary": "addRootChildToSchema",
				"operationId": "addRootChildToSchemaUsingPOST",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"in": "body",
					"name": "node",
					"description": "node",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AuthorizationNodeDTO"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/authorization/{domain}/schema/load": {
			"post": {
				"x-auth-type":"Application",
				"x-scope":"authorization.schema.manage",				
				"tags": ["authorization-controller"],
				"summary": "loadSchema",
				"operationId": "loadSchemaUsingPOST",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"in": "body",
					"name": "httpEntity",
					"description": "httpEntity",
					"required": false,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},		
		"/authorization/{domain}/schema/validate": {
			"post": {
				"x-auth-type":"Application",
				"x-scope":"authorization.schema.manage",			
				"tags": ["authorization-controller"],
				"summary": "validateResource",
				"operationId": "validateResourceUsingPOST",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"in": "body",
					"name": "resource",
					"description": "resource",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AuthorizationResourceDTO"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/authorization/{domain}/schema/{qname}": {
			"post": {
				"x-auth-type":"Application",
				"x-scope":"authorization.schema.manage",			
				"tags": ["authorization-controller"],
				"summary": "addChildToSchema",
				"operationId": "addChildToSchemaUsingPOST",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"in": "body",
					"name": "childNode",
					"description": "childNode",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AuthorizationNodeDTO"
					}
				},
				{
					"name": "parentQname",
					"in": "path",
					"description": "parentQname",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"get": {
				"x-auth-type":"Application",
				"x-scope":"authorization.schema.manage",			
				"tags": ["authorization-controller"],
				"summary": "getNode",
				"operationId": "getNodeUsingGET",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"name": "qname",
					"in": "path",
					"description": "qname",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AuthorizationNodeDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/authorization/{domain}/validate": {
			"post": {
				"x-auth-type":"Application",
				"x-scope":"authorization.manage",			
				"tags": ["authorization-controller"],
				"summary": "validateAuthorization",
				"operationId": "validateAuthorizationUsingPOST",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"in": "body",
					"name": "authorization",
					"description": "authorization",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AuthorizationDTO"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/authorization/{domain}/{id}": {
			"delete": {
				"x-auth-type":"Application",
				"x-scope":"authorization.manage",			
				"tags": ["authorization-controller"],
				"summary": "removeAuthorization",
				"operationId": "removeAuthorizationUsingDELETE",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "domain",
					"in": "path",
					"description": "domain",
					"required": true,
					"type": "string"
				},
				{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		}
	},
	"definitions": {
		"AuthorizationDTO": {
			"type": "object",
			"properties": {
				"action": {
					"type": "string"
				},
				"entity": {
					"$ref": "#/definitions/AuthorizationUserDTO"
				},
				"id": {
					"type": "string"
				},
				"resource": {
					"$ref": "#/definitions/AuthorizationResourceDTO"
				},
				"subject": {
					"$ref": "#/definitions/AuthorizationUserDTO"
				}
			}
		},
		"AuthorizationResourceDTO": {
			"type": "object",
			"properties": {
				"qnameRef": {
					"type": "string"
				},
				"values": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AuthorizationNodeValueDTO"
					}
				}
			}
		},
		"AuthorizationNodeDTO": {
			"type": "object",
			"properties": {
				"parameters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AuthorizationNodeParamDTO"
					}
				},
				"qname": {
					"type": "string"
				}
			}
		},
		"AuthorizationNodeParamDTO": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"qname": {
					"type": "string"
				}
			}
		},
		"AuthorizationUserDTO": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"AuthorizationNodeValueDTO": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"qname": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			}
		}
	}
}