{
	"swagger": "2.0",
	"x-wso2-security": {
		"apim": {
			"x-wso2-scopes": [
			{
				"description": "Read roles of the current user.",
				"name": "Read user roles",
				"roles": "",
				"key": "user.roles.me"
			},
			{
				"description": "Modify the roles of the specified user within a tenant.",
				"name": "Write user roles",
				"roles": "ROLE_PROVIDER",
				"key": "user.roles.write"
			},		
			{
				"description": "Read the roles of the specified user within a tenant.",
				"name": "Read user roles",
				"roles": "ROLE_PROVIDER",
				"key": "user.roles.read"
			},		
			{
				"description": "Read the roles of any user.",
				"name": "Read arbitrary user roles",
				"roles": "rolemanager",
				"key": "user.roles.read.all"
			},	
			{
				"description": "Read the roles of any app client.",
				"name": "Read client app roles",
				"roles": "rolemanager",
				"key": "client.roles.read.all"
			}									
			]
		}
	},	
	"info": {
		"description": "Api Documentation",
		"version": "1.0",
		"title": "Api Documentation",
		"termsOfService": "urn:tos",
		"contact": {
			
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"host": "${server.host}",
	"basePath": "${server.contextPath}",
	"tags": [{
		"name": "roles-controller",
		"description": "Roles Controller"
	}],
	"paths": {
		"/userroles/all/user/{userId}": {
			"get": {
				"x-auth-type":"Application User",
				"x-scope":"user.roles.read.all",			
				"tags": ["roles-controller"],
				"summary": "getAllRoles",
				"operationId": "getAllRolesUsingGET",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "userId",
					"in": "path",
					"description": "userId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Role"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/userroles/client": {
			"get": {
				"x-auth-type":"Application",
				"x-scope":"client.roles.read.all",				
				"tags": ["roles-controller"],
				"summary": "getClientRoles",
				"operationId": "getClientRolesUsingGET",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Role"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/userroles/me": {
			"get": {
				"x-auth-type":"Application User",
				"x-scope":"user.roles.me",				
				"tags": ["roles-controller"],
				"summary": "getRoles",
				"operationId": "getRolesUsingGET",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Role"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/userroles/tenant/user/{userId}": {
			"get": {
				"x-auth-type":"Application",
				"x-scope":"user.roles.read",					
				"tags": ["roles-controller"],
				"summary": "getTenantRoles",
				"operationId": "getTenantRolesUsingGET",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "userId",
					"in": "path",
					"description": "userId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Role"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/userroles/user/{userId}": {
			"put": {
				"x-auth-type":"Application",
				"x-scope":"user.roles.write",			
				"tags": ["roles-controller"],
				"summary": "addRoles",
				"operationId": "addRolesUsingPUT",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "userId",
					"in": "path",
					"description": "userId",
					"required": true,
					"type": "integer",
					"format": "int64"
				},
				{
					"in": "body",
					"name": "roles",
					"description": "roles",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"x-auth-type":"Application",
				"x-scope":"user.roles.write",				
				"tags": ["roles-controller"],
				"summary": "deleteRoles",
				"operationId": "deleteRolesUsingDELETE",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [{
					"name": "userId",
					"in": "path",
					"description": "userId",
					"required": true,
					"type": "integer",
					"format": "int64"
				},
				{
					"in": "body",
					"name": "roles",
					"description": "roles",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		}
	},
	"definitions": {
		"Role": {
			"type": "object",
			"properties": {
				"authority": {
					"type": "string"
				},
				"context": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"role": {
					"type": "string"
				},
				"scope": {
					"type": "string",
					"enum": ["system",
					"application",
					"tenant",
					"user"]
				}
			}
		}
	}
}