# RESOURCE MESSAGES
spring:
  messages:
    basename: resources/internal
    encoding: UTF-8

# DB CONFIGURATION
jdbc:
  dialect: org.hibernate.dialect.MySQLDialect
  show-sql: false

# AAC ADMIN USER PASSWORD
admin:
  username: admin
  password: admin
  contexts: apimanager, authorization, components
  contextSpaces: apimanager/carbon.super

# BASIC SECURITY PROPERTIES
security:
  redirects:
      matchports: true
      matchsubdomains: true
  cache:
      jwks: no-cache #set cacheable with "public, max-age=3600, must-revalidate, no-transform"
  restricted: false
  basic:
      enabled: false
  cie: # CIE 2-factor authentication properties
    idp: Smart Community
    pattern: "Inserisci il PIN per accedere a %1$s tramite %2$s"
    defaultsp: Smart Community

oauth2:
   jwt: false
   kid: 
   key: 
   keystore: classpath:/keystore.jwks 
       
openid:
   issuer:
   kid: 
   keystore: classpath:/keystore.jwks

# LOGGING CONFIGURATION
logging:
  level:
    ROOT: INFO

# SWAGGER 
swagger:
  title: 
    AAC: AAC API - Profile and token info 
    AACApiKey: AAC API - API Access Key management
    AACAuthorization: AAC API - Authorization management 
    AACRoles: AAC API - Role management 
  description: 
    AAC: Authorization and Authentication Control APIs - Profile and token info 
    AACApiKey: Authorization and Authentication Control APIs - API Key validation and management
    AACAuthorization: Authorization and Authentication Control APIs - Authorization management 
    AACRoles: Authorization and Authentication Control APIs - Role managment
  version: 1.0.0
  license: Apache License, Version 2.0
  licenseUrl: http://www.apache.org/licenses/LICENSE-2.0
  contact:
    name:  Smart Community Lab
    url: www.smartcommunitylab.it
    email: info@smartcommunitylab.it
    
---
spring:
  profiles: authorization
# ROLE PREFIX FOR AUTHORIZATION CHECK
authorization:
  contextSpace: authorization
    