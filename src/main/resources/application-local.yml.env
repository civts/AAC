# SERVER ENDPOINT
server:
  host: ${SERVER_HOST:localhost}
  port: ${SERVER_PORT:8080}
  contextPath: /aac

# APPLICATION EXTERNAL URL
application:
  url: ${APPLICATION_EXT_URL:http://localhost:8080/aac}

# DB CONFIGURATION
jdbc:
  dialect: org.hibernate.dialect.MySQLDialect
  driver: com.mysql.jdbc.Driver
  url: ${JDBC_URL:jdbc:mysql://localhost:3306/aac}
  user: ${JDBC_USER:ac}
  password: ${JDBC_PASS:ac}

spring:
  data:
    mongodb:
      authentication-database: admin
      uri: ${MONGO_URI:mongodb://user:pass@host:port}
      database: ${MONGO_DB:aac-authorization-db}

# OAUTH2 INTEGRATIONS
oauth-providers:
  providers:
    - provider: facebook
      client:
        clientId: ${OAUTH_FACEBOOK_CLIENTID:YOUR_FACEBOOK_CLIENT_ID}
        clientSecret: ${OAUTH_FACEBOOK_CLIENTSECRET:YOUR_FACEBOOK_CLIENT_SECRET}
        accessTokenUri: https://graph.facebook.com/oauth/access_token
        userAuthorizationUri: https://www.facebook.com/dialog/oauth
        preEstablishedRedirectUri: ${application.url}/auth/facebook-oauth/callback
        useCurrentUri: false
        tokenName: oauth_token
        authenticationScheme: query
        clientAuthenticationScheme: form
        scope:
            - openid
            - email
            - profile
    - provider: google
      client:
        clientId: ${OAUTH_GOOGLE_CLIENTID:YOUR_GOOGLE_CLIENT_ID}
        clientSecret: ${OAUTH_GOOGLE_CLIENTSECRET:YOUR_GOOGLE_CLIENT_SECRET}
        accessTokenUri: https://www.googleapis.com/oauth2/v3/token
        userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
        preEstablishedRedirectUri: ${application.url}/auth/google-oauth/callback
        useCurrentUri: false
        clientAuthenticationScheme: form
        scope:
            - openid
            - email
            - profile
      resource:
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
        preferTokenInfo: true

# AAC ADMIN USER PASSWORD
admin:
  password: ${ADMIN_PASSWORD:admin}
  contexts: apimanager, authorization, components
  contextSpaces: apimanager/carbon.super

# EMAIL SERVER FOR NOTIFICATIONS
mail:
  username: ${MAIL_USER:EMAIL_SENDER}
  password: ${MAIL_PASS:EMAIL_PASSWORD}
  host: ${MAIL_HOST:SMTP_HOST}
  port: ${MAIL_PORT:SMTP_PORT}
  protocol: ${MAIL_PROTOCOL:SMTP_PROTOCOL}

# SECURITY PROPERTIES
security:
  rememberme:
    key: ${REMEMBER_ME_KEY:REMEMBER_ME_SECRET_KEY}
  identity: # IDENTITY MAPPING SOURCE FILE
    source: ${IDENTITY_SOURCE:file:///path/to/identities.txt}
  redirects:
    matchports: false
  oauth2:
     jwt: ${ENABLE_JWT:false}
     kid: ${JWT_KID:rsa1}
     key: ${JWT_KEY:}

# API-MANAGEMENT PROPERTIES
api:
  contextSpace: apimanager
  adminClient:
    id: ${APIM_ID:API_MGT_CLIENT_ID}
    secret: ${APIM_SECRET:YOUR_API_MNGMT_CLIENT_SECRET}
  internalUrl: ${APIM_INTERNAL_URL:http://localhost:8080/aac}
  store:
    endpoint: ${APIM_STORE_ENDPOINT:https://localhost:9443/api/am/store/v0.14}
  publisher:
    endpoint: ${APIM_PUBLISHER_ENDPOINT:https://localhost:9443/api/am/publisher/v0.14}
  identity:
    endpoint: ${APIM_IDENTITY_ENDPOINT:https://localhost:9443/services/IdentityApplicationManagementService}
    password: ${APIM_IDENTITY_PASS:admin}
  usermgmt:
    endpoint: ${APIM_USERMGMT_ENDPOINT:https://localhost:9443/services/RemoteUserStoreManagerService}
    password: ${APIM_USERMGMT_PASS:admin}
  multitenancy:
    endpoint: ${APIM_MULTITENANCY_ENDPOINT:https://localhost:9443/services/TenantMgtAdminService}
    password: ${APIM_MULTITENANCY_PASS:admin}

# OPEN ID
openid:
  issuer: ${OPENID_ISSUER:http://localhost:8080/aac}
